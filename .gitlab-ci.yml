stages:
  - prepare
  - build
  - deploy

.prepare_environment_name: &prepare_environment_name
  rules:
    - if: '$CI_COMMIT_BRANCH == "staging"'
      variables:
        CI_ENVIRONMENT_NAME: "staging"
    - if: '$CI_COMMIT_BRANCH == "master"'
      variables:
        CI_ENVIRONMENT_NAME: "production"
    - when: never

download_env:
  <<: *prepare_environment_name
  stage: prepare
  image: alpine:3.18
  tags:
    - gitlab-runner
  variables:
    SECURE_FILES_DOWNLOAD_PATH: './'
  before_script:
    - apk add --no-cache bash curl
  script:
    - curl --silent "https://gitlab.com/gitlab-org/incubation-engineering/mobile-devops/download-secure-files/-/raw/main/installer" | bash
  artifacts:
    paths:
      - .env.$CI_ENVIRONMENT_NAME
    expire_in: 1h

build_and_publish:
  <<: *prepare_environment_name
  stage: build
  image: docker:24.0.5
  environment:
    name: $CI_ENVIRONMENT_NAME
  services:
    - docker:24.0.5-dind
  tags:
    - gitlab-runner
  before_script:
    - mv .env.$CI_ENVIRONMENT_NAME .env
    - echo "$DOCKER_HUB_TOKEN" | docker login -u "$DOCKER_HUB_USERNAME" --password-stdin
  script:
    - docker build -t $DOCKER_HUB_REPOSITORY:$DOCKER_HUB_IMAGE_NAME .
    - docker push $DOCKER_HUB_REPOSITORY:$DOCKER_HUB_IMAGE_NAME

deploy:
  <<: *prepare_environment_name
  stage: deploy
  image: curlimages/curl:latest
  environment:
    name: $CI_ENVIRONMENT_NAME
  tags:
    - gitlab-runner
  script:
    - curl -X POST "$PORTAINER_WEBHOOK_URL"
